name: Publish to PyPI / TestPyPI

on:
  push:
    tags:
      - 'v*'      # e.g., v0.1.1 -> publish to PyPI
      - 'test-*'  # e.g., test-0.1.1 -> publish to TestPyPI

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build backend
        run: |
          python -m pip install --upgrade pip
          pip install build hatchling

      - name: Verify version matches tag
        id: version
        run: |
          TAG="${GITHUB_REF##*/}"
          echo "Tag: $TAG"
          # Determine expected version from tag
          if [[ "$TAG" == v* ]]; then
            EXPECTED_VERSION="${TAG#v}"
            TARGET="pypi"
          elif [[ "$TAG" == test-* ]]; then
            EXPECTED_VERSION="${TAG#test-}"
            TARGET="testpypi"
          else
            echo "Unsupported tag pattern: $TAG" >&2
            exit 1
          fi

          # Extract version from package via hatch version (reads from __init__.py)
          PKG_VERSION=$(python - <<'PY'
from pathlib import Path
import re
p = Path('src/streamgraph/__init__.py').read_text(encoding='utf-8')
m = re.search(r"__version__\s*=\s*['\"]([^'\"]+)['\"]", p)
print(m.group(1) if m else '')
PY
          )
          echo "Package version: $PKG_VERSION"
          if [ -z "$PKG_VERSION" ]; then
            echo "Could not determine package version." >&2
            exit 1
          fi
          if [ "$PKG_VERSION" != "$EXPECTED_VERSION" ]; then
            echo "Version mismatch: tag $TAG expects $EXPECTED_VERSION but package has $PKG_VERSION" >&2
            exit 1
          fi
          echo "target=$TARGET" >> $GITHUB_OUTPUT

      - name: Build wheel and sdist
        run: |
          python -m build --sdist --wheel

      - name: Publish to TestPyPI
        if: steps.version.outputs.target == 'testpypi'
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}

      - name: Publish to PyPI
        if: steps.version.outputs.target == 'pypi'
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}


